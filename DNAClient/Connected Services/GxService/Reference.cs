//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DNAClient.GxService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDetails", Namespace="http://schemas.datacontract.org/2004/07/DataAccessLaer")]
    [System.SerializableAttribute()]
    public partial class EmployeeDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GxService.ISimpleService")]
    public interface ISimpleService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISimpleService/DoWork")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISimpleService/DoWork")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleService/GetMessage", ReplyAction="http://tempuri.org/ISimpleService/GetMessageResponse")]
        string GetMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleService/GetMessage", ReplyAction="http://tempuri.org/ISimpleService/GetMessageResponse")]
        System.Threading.Tasks.Task<string> GetMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleService/RequestReplyOperation", ReplyAction="http://tempuri.org/ISimpleService/RequestReplyOperationResponse")]
        string RequestReplyOperation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleService/RequestReplyOperation", ReplyAction="http://tempuri.org/ISimpleService/RequestReplyOperationResponse")]
        System.Threading.Tasks.Task<string> RequestReplyOperationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleService/RequestReplyOperationV1", ReplyAction="http://tempuri.org/ISimpleService/RequestReplyOperationV1Response")]
        DNAClient.GxService.EmployeeDetails[] RequestReplyOperationV1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleService/RequestReplyOperationV1", ReplyAction="http://tempuri.org/ISimpleService/RequestReplyOperationV1Response")]
        System.Threading.Tasks.Task<DNAClient.GxService.EmployeeDetails[]> RequestReplyOperationV1Async();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISimpleService/OneWayOperationDemo")]
        void OneWayOperationDemo();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISimpleService/OneWayOperationDemo")]
        System.Threading.Tasks.Task OneWayOperationDemoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleServiceChannel : DNAClient.GxService.ISimpleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleServiceClient : System.ServiceModel.ClientBase<DNAClient.GxService.ISimpleService>, DNAClient.GxService.ISimpleService {
        
        public SimpleServiceClient() {
        }
        
        public SimpleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string GetMessage() {
            return base.Channel.GetMessage();
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync() {
            return base.Channel.GetMessageAsync();
        }
        
        public string RequestReplyOperation() {
            return base.Channel.RequestReplyOperation();
        }
        
        public System.Threading.Tasks.Task<string> RequestReplyOperationAsync() {
            return base.Channel.RequestReplyOperationAsync();
        }
        
        public DNAClient.GxService.EmployeeDetails[] RequestReplyOperationV1() {
            return base.Channel.RequestReplyOperationV1();
        }
        
        public System.Threading.Tasks.Task<DNAClient.GxService.EmployeeDetails[]> RequestReplyOperationV1Async() {
            return base.Channel.RequestReplyOperationV1Async();
        }
        
        public void OneWayOperationDemo() {
            base.Channel.OneWayOperationDemo();
        }
        
        public System.Threading.Tasks.Task OneWayOperationDemoAsync() {
            return base.Channel.OneWayOperationDemoAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GxService.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/ProcessReport", ReplyAction="http://tempuri.org/IReportService/ProcessReportResponse")]
        void ProcessReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/ProcessReport", ReplyAction="http://tempuri.org/IReportService/ProcessReportResponse")]
        System.Threading.Tasks.Task ProcessReportAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : DNAClient.GxService.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<DNAClient.GxService.IReportService>, DNAClient.GxService.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ProcessReport() {
            base.Channel.ProcessReport();
        }
        
        public System.Threading.Tasks.Task ProcessReportAsync() {
            return base.Channel.ProcessReportAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GxService.IRestfulDNA")]
    public interface IRestfulDNA {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestfulDNA/RequestReplyOperation_Rest", ReplyAction="http://tempuri.org/IRestfulDNA/RequestReplyOperation_RestResponse")]
        string RequestReplyOperation_Rest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestfulDNA/RequestReplyOperation_Rest", ReplyAction="http://tempuri.org/IRestfulDNA/RequestReplyOperation_RestResponse")]
        System.Threading.Tasks.Task<string> RequestReplyOperation_RestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestfulDNA/RequestReplyOperation_RestV1", ReplyAction="http://tempuri.org/IRestfulDNA/RequestReplyOperation_RestV1Response")]
        DNAClient.GxService.EmployeeDetails[] RequestReplyOperation_RestV1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestfulDNA/RequestReplyOperation_RestV1", ReplyAction="http://tempuri.org/IRestfulDNA/RequestReplyOperation_RestV1Response")]
        System.Threading.Tasks.Task<DNAClient.GxService.EmployeeDetails[]> RequestReplyOperation_RestV1Async();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestfulDNAChannel : DNAClient.GxService.IRestfulDNA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestfulDNAClient : System.ServiceModel.ClientBase<DNAClient.GxService.IRestfulDNA>, DNAClient.GxService.IRestfulDNA {
        
        public RestfulDNAClient() {
        }
        
        public RestfulDNAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestfulDNAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestfulDNAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestfulDNAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RequestReplyOperation_Rest() {
            return base.Channel.RequestReplyOperation_Rest();
        }
        
        public System.Threading.Tasks.Task<string> RequestReplyOperation_RestAsync() {
            return base.Channel.RequestReplyOperation_RestAsync();
        }
        
        public DNAClient.GxService.EmployeeDetails[] RequestReplyOperation_RestV1() {
            return base.Channel.RequestReplyOperation_RestV1();
        }
        
        public System.Threading.Tasks.Task<DNAClient.GxService.EmployeeDetails[]> RequestReplyOperation_RestV1Async() {
            return base.Channel.RequestReplyOperation_RestV1Async();
        }
    }
}
